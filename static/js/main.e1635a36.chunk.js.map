{"version":3,"sources":["Utils.ts","Enums.ts","CompactResouceCard.tsx","FilterControls.tsx","DetailsPane.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["timeDifference","current","previous","msPerMinute","msPerHour","msPerDay","msPerMonth","msPerYear","elapsed","Math","round","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","categoryMapping","medicine","text","color","logoIcon","bloodgroup","therapy","vaccine","oxygen","bed","ambulance","food","getEnumValues","obj","Object","values","map","k","key","Type","Source","Medicince","Ambulance","Food","Oxygen","Bed","Therapy","BloodGroup","Vaccine","CATEGORIES","ResourceCardCompact","props","resource","leads","l","name","sender","profileImageSrc","resourceDetails","icons","length","push","join","getIconsAndTextObject","DocumentCard","onClick","ev","setFocusVisibility","type","DocumentCardType","compact","style","height","position","data-is-focusable","fontSize","fontWeight","display","padding","textDecoration","href","contactuid","margin","icon","DocumentCardLogo","styles","root","iconType","location","city","DocumentCardDetails","DocumentCardTitle","title","shouldTruncate","showAsSecondaryTitle","textTransform","DocumentCardStatus","statusIcon","status","DocumentCardActivity","activity","Date","getTime","lastShared","people","FilterControls","category","subCategory","setCategory","setSubCategory","setType","dropdownRef","React","getOptionsForCategory","dropdownOptions","setDropdownOptions","Stack","tokens","childrenGap","ChoiceGroup","selectedKey","options","typeOptions","onChange","option","currentKey","label","defaultSelectedKey","categoryOptions","focus","Dropdown","placeholder","selectedKeys","componentRef","event","item","index","selected","filter","multiSelect","required","disabled","dropdownStyles","onDismiss","dropdown","width","iconProps","iconName","DetailsPane","left","Persona","showUnknownPersonaCoin","contact","secondaryText","tertiaryText","size","PersonaSize","size72","cat","ListCard","Label","lead","Lead","alignItems","Icon","paddingLeft","JSON","stringify","link","source","Image","src","parse","rawdata","message","stackTokens","App","exact","path","Home","component","Search","Details","verticalAlign","verticalFill","to","initializeIcons","withRouter","useState","search","paramStr","setParamString","params","URLSearchParams","paramValues","getAll","getCurrentCategory","types","getCurrentType","resources","setResources","isLoading","setIsLoading","onHistoryChange","useEffect","removeListener","history","listen","searchUrl","toString","formSearchUrl","fetch","method","then","res","json","response","rows","catch","error","console","log","useBoolean","isOpen","openFiltersPanel","setTrue","dismissPanel","setFalse","updateParams","newParamStr","selectedIdx","setSelectedIdx","DefaultButton","marginBottom","maxWidth","Panel","headerText","isLightDismiss","PanelType","medium","closeButtonAriaLabel","newCategory","forEach","delete","opt","append","newType","FocusZone","direction","FocusZoneDirection","vertical","isCircularNavigation","role","defaultTabbableElement","shouldFocusOnMount","flexDirection","onFocus","clickResourceNode","target","closest","nodes","Array","prototype","slice","call","parentNode","childNodes","indexOf","wrap","inner","r","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1635a36.chunk.js","sourcesContent":["import { IDocumentCardLogoProps } from \"@fluentui/react\";\r\nimport { IExtractedArrays } from \"./Models\";\r\n\r\ninterface IconType {\r\n  logoIcon: string;\r\n  color: string;\r\n}\r\n\r\nexport function timeDifference(current: number, previous: number) {\r\n  var msPerMinute = 60 * 1000;\r\n  var msPerHour = msPerMinute * 60;\r\n  var msPerDay = msPerHour * 24;\r\n  var msPerMonth = msPerDay * 30;\r\n  var msPerYear = msPerDay * 365;\r\n\r\n  var elapsed = current - previous;\r\n\r\n  if (elapsed < msPerMinute) {\r\n    return Math.round(elapsed / 1000) + \" seconds ago\";\r\n  } else if (elapsed < msPerHour) {\r\n    return Math.round(elapsed / msPerMinute) + \" minutes ago\";\r\n  } else if (elapsed < msPerDay) {\r\n    return Math.round(elapsed / msPerHour) + \" hours ago\";\r\n  } else if (elapsed < msPerMonth) {\r\n    return Math.round(elapsed / msPerDay) + \" days ago\";\r\n  } else if (elapsed < msPerYear) {\r\n    return Math.round(elapsed / msPerMonth) + \" months ago\";\r\n  } else {\r\n    return Math.round(elapsed / msPerYear) + \" years ago\";\r\n  }\r\n}\r\n\r\nexport function getIconsAndTextObject(resource: IExtractedArrays) {\r\n  let text = [];\r\n  let icons: IconType[] = [];\r\n\r\n  if (resource.medicine && resource.medicine.length) {\r\n    text.push(resource.medicine.join(\";\"));\r\n    icons.push(categoryMapping.medicine);\r\n  }\r\n  if (resource.bloodgroup && resource.bloodgroup.length) {\r\n    text.push(resource.bloodgroup.join(\";\"));\r\n    icons.push(categoryMapping.bloodgroup);\r\n  }\r\n  if (resource.therapy && resource.therapy.length) {\r\n    text.push(resource.therapy.join(\";\"));\r\n    icons.push(categoryMapping.therapy);\r\n  }\r\n\r\n  if (resource.oxygen && resource.oxygen.length) {\r\n    text.push(resource.oxygen.join(\";\"));\r\n    icons.push(categoryMapping.oxygen);\r\n  }\r\n  if (resource.bed && resource.bed.length) {\r\n    text.push(resource.bed.join(\";\"));\r\n    icons.push(categoryMapping.bed);\r\n  }\r\n  if (resource.ambulance && resource.ambulance.length) {\r\n    text.push(resource.ambulance.join(\";\"));\r\n    icons.push(categoryMapping.ambulance);\r\n  }\r\n  if (resource.food && resource.food.length) {\r\n    text.push(resource.food.join(\";\"));\r\n    icons.push();\r\n  }\r\n\r\n  return {\r\n    text,\r\n    icons,\r\n  };\r\n}\r\n\r\nexport function toTitleCase(str: string) {\r\n  return str.replace(/\\w\\S*/g, function (txt) {\r\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n  });\r\n}\r\n\r\nexport function getLogoProps(iconType: IconType): IDocumentCardLogoProps {\r\n  return {\r\n    styles: {\r\n      root: {\r\n        fontSize: 20,\r\n        padding: 5,\r\n        display: \"inline-block\",\r\n        color: iconType.color,\r\n      },\r\n    },\r\n    logoIcon: iconType.logoIcon,\r\n  };\r\n}\r\n\r\nexport const categoryMapping: {\r\n  [name in CategoryType]: { text: string; color: string; logoIcon: string };\r\n} = {\r\n  medicine: {\r\n    text: \"Medicine\",\r\n    color: \"black\",\r\n    logoIcon: \"Hospital\",\r\n  },\r\n  bloodgroup: { text: \"Blood Group\", color: \"red\", logoIcon: \"Drop\" },\r\n  therapy: { text: \"Therapy\", color: \"orange\", logoIcon: \"Health\" },\r\n  vaccine: { text: \"Vaccine\", color: \"green\", logoIcon: \"ShieldSolid\" },\r\n  oxygen: { text: \"Oxygen Supplies\", color: \"blue\", logoIcon: \"SpeedHigh\" },\r\n  bed: { text: \"Beds\", color: \"black\", logoIcon: \"Hotel\" },\r\n  ambulance: {\r\n    text: \"Ambulance\",\r\n    color: \"black\",\r\n    logoIcon: \"ParkingLocationMirrored\",\r\n  },\r\n  food: { text: \"Food\", color: \"green\", logoIcon: \"Breakfast\" },\r\n};\r\n\r\nexport function getEnumValues(obj: Object) {\r\n  return Object.values(obj).map((k) => ({ key: k, text: k }));\r\n}\r\n\r\nexport const CATEGORIES: CategoryType[] = [\r\n  \"medicine\",\r\n  \"bloodgroup\",\r\n  \"vaccine\",\r\n  \"therapy\",\r\n  \"oxygen\",\r\n  \"bed\",\r\n  \"ambulance\",\r\n  \"food\",\r\n];\r\n\r\nexport type CategoryType =\r\n  | \"medicine\"\r\n  | \"bloodgroup\"\r\n  | \"therapy\"\r\n  | \"vaccine\"\r\n  | \"oxygen\"\r\n  | \"bed\"\r\n  | \"ambulance\"\r\n  | \"food\";\r\n","export enum Type {\r\n  Availability = \"availability\",\r\n  Requirement = \"requirement\",\r\n}\r\n\r\nexport enum Source {\r\n  WhatsApp = \"whatsapp\",\r\n  Twitter = \"twitter\",\r\n}\r\n\r\nexport enum Medicince {\r\n  CovidMedicines = \"Covid Medicines\",\r\n  LiposomalAmphotericinB = \"Liposomal Amphotericin B\",\r\n  Tocilizumab = \"Tocilizumab\",\r\n  BaricitinibOlumiant = \"Baricitinib Olumiant\",\r\n  Fabiflu = \"Fabiflu\",\r\n  Favipivavir = \"Favipivavir\",\r\n  Xarelto = \"Xarelto\",\r\n  SodiumLactate = \"Sodium Lactate\",\r\n  SodiumChloride = \"Sodium Chloride\",\r\n  Doxycycline = \"Doxycycline\",\r\n  Pantoprazole = \"Pantoprazole\",\r\n  Anidulafungin = \"Anidulafungin\",\r\n  Meropenem = \"Meropenem\",\r\n  Deflazacort = \"Deflazacort\",\r\n  Zinc = \"Zinc\",\r\n  Azithromycin = \"Azithromycin\",\r\n  Bevacuzimab = \"Bevacuzimab\",\r\n  Enoxaparin = \"Enoxaparin\",\r\n  Posatral = \"Posatral\",\r\n  Medrol = \"Medrol\",\r\n  Remdesivir = \"Remdesivir\",\r\n  Cresemba = \"Cresemba\",\r\n  Alprazolam = \"Alprazolam\",\r\n}\r\n\r\nexport enum Ambulance {\r\n  Ambulance = \"Ambulance\",\r\n}\r\n\r\nexport enum Food {\r\n  Food = \"Food\",\r\n  DryRation = \"Dry Ration\",\r\n}\r\n\r\nexport enum Oxygen {\r\n  OxygenCans = \"Oxygen Cans\",\r\n  OxygenCylinders = \"Oxygen Cylinders\",\r\n  OxygenConcentrators = \"Oxygen Concentrators\",\r\n  OxygenRefill = \"Oxygen Refill\",\r\n  OxygenRegulator = \"Oxygen Regulator\",\r\n  Oximeter = \"Oximeter\",\r\n  Respirometer = \"Respirometer\",\r\n}\r\n\r\nexport enum Bed {\r\n  HomeICU = \"Home ICU\",\r\n  OxygenBeds = \"Oxygen Beds\",\r\n  ICUBeds = \"ICU Beds\",\r\n  Ventilators = \"Ventilators\",\r\n}\r\n\r\nexport enum Therapy {\r\n  ECMO = \"ECMO\",\r\n  Plasma = \"Plasma\",\r\n}\r\n\r\nexport enum BloodGroup {\r\n  AnyGroup = \"Any Group\",\r\n  APOS = \"A+\",\r\n  ANEG = \"A-\",\r\n  BPOS = \"B+\",\r\n  BNEG = \"B-\",\r\n  ABPOS = \"AB+\",\r\n  ABNEG = \"AB-\",\r\n  OPOS = \"O+\",\r\n  ONEG = \"O-\",\r\n}\r\n\r\nexport enum Vaccine {\r\n  Covishield = \"Covishield\",\r\n  Covaxin = \"Covaxin\",\r\n  Moderna = \"Moderna\",\r\n  Pfizer = \"Pfizer\",\r\n  Sputnik = \"Sputnik\",\r\n  Johnson = \"Johnson & Johnson\",\r\n}","import * as React from \"react\";\r\nimport {\r\n  DocumentCard,\r\n  DocumentCardActivity,\r\n  DocumentCardDetails,\r\n  DocumentCardTitle,\r\n  IDocumentCardActivityPerson,\r\n  DocumentCardType,\r\n  DocumentCardStatus,\r\n  DocumentCardLogo,\r\n} from \"@fluentui/react/lib/DocumentCard\";\r\nimport { IListingContact } from \"./Models\";\r\nimport {\r\n  getIconsAndTextObject,\r\n  getLogoProps,\r\n  timeDifference,\r\n  toTitleCase,\r\n} from \"./Utils\";\r\nimport { setFocusVisibility } from \"@fluentui/react\";\r\n\r\nexport const ResourceCardCompact: React.FunctionComponent<{\r\n  resource: IListingContact;\r\n}> = (props) => {\r\n  const { resource } = props;\r\n\r\n  const leads: IDocumentCardActivityPerson[] =\r\n    resource.leads?.map((l) => ({\r\n      name: l.sender,\r\n      profileImageSrc: \"\",\r\n    })) || [];\r\n\r\n  const resourceDetails = getIconsAndTextObject(resource);\r\n\r\n  return (\r\n    <DocumentCard\r\n      onClick={(ev) => {\r\n        setFocusVisibility(true);\r\n      }}\r\n      type={DocumentCardType.compact}\r\n      style={{ height: 160 }}\r\n    >\r\n      <div style={{ position: \"relative\" }}>\r\n        <a\r\n          data-is-focusable={false}\r\n          style={{\r\n            fontSize: 15,\r\n            fontWeight: 600,\r\n            color: `rgb(0, 120, 212)`,\r\n            display: \"inline-block\",\r\n            padding: \"8px 16px\",\r\n            textDecoration: \"none\",\r\n          }}\r\n          href={`tel://${resource.contactuid}`}\r\n        >\r\n          {resource.contactuid}\r\n        </a>\r\n        <div style={{ position: \"absolute\", margin: \"0 20px\" }}>\r\n          {resourceDetails.icons.map((icon) => (\r\n            <DocumentCardLogo {...getLogoProps(icon)} />\r\n          ))}\r\n          {resource.location?.map((city) => (\r\n            <div style={{ fontSize: 15 }}>{toTitleCase(city)}</div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <DocumentCardDetails>\r\n        <DocumentCardTitle\r\n          title={`${resource.type.toUpperCase()}: ${resourceDetails.text\r\n            .map(toTitleCase)\r\n            .join(\", \")}`}\r\n          shouldTruncate\r\n          showAsSecondaryTitle\r\n          styles={{\r\n            root: { textTransform: \"Capitalize\", fontWeight: \"bold\" },\r\n          }}\r\n        ></DocumentCardTitle>\r\n\r\n        <DocumentCardStatus\r\n          statusIcon=\"attach\"\r\n          status={`This contact was shared ${resource.leads?.length} time(s)!`}\r\n        />\r\n        <DocumentCardActivity\r\n          activity={`Last shared: ${timeDifference(\r\n            new Date().getTime(),\r\n            new Date(resource.lastShared).getTime()\r\n          )}`}\r\n          people={leads}\r\n        />\r\n      </DocumentCardDetails>\r\n    </DocumentCard>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport {\r\n  Dropdown,\r\n  IDropdown,\r\n  IDropdownOption,\r\n  IDropdownStyles,\r\n} from \"@fluentui/react/lib/Dropdown\";\r\nimport { ChoiceGroup, IChoiceGroupOption, Stack } from \"@fluentui/react\";\r\nimport { categoryMapping, getEnumValues } from \"./Utils\";\r\nimport {\r\n  Ambulance,\r\n  Bed,\r\n  BloodGroup,\r\n  Food,\r\n  Medicince,\r\n  Oxygen,\r\n  Therapy,\r\n  Vaccine,\r\n} from \"./Enums\";\r\n\r\nexport interface IFilterControlsProps {\r\n  type: string;\r\n  category: string;\r\n  subCategory: string[];\r\n  setType: (k: string) => void;\r\n  setCategory: (k: string) => void;\r\n  setSubCategory: (k: string[]) => void;\r\n}\r\n\r\nexport const FilterControls: React.FunctionComponent<IFilterControlsProps> = (\r\n  props\r\n) => {\r\n  const { type, category, subCategory, setCategory, setSubCategory, setType } =\r\n    props;\r\n  const dropdownRef = React.createRef<IDropdown>();\r\n  const onSetFocus = () => dropdownRef.current!.focus(true);\r\n\r\n  const [dropdownOptions, setDropdownOptions] = React.useState<\r\n    { key: string; text: string }[]\r\n  >(getOptionsForCategory(category));\r\n\r\n  const onCategoryChange = (\r\n    ev?: React.FormEvent<HTMLElement | HTMLInputElement>,\r\n    option?: IChoiceGroupOption\r\n  ) => {\r\n    const currentKey = option?.key || \"all\";\r\n    setDropdownOptions(getOptionsForCategory(currentKey));\r\n\r\n    setSubCategory([]);\r\n    setCategory(currentKey);\r\n\r\n    if (currentKey !== \"all\") {\r\n      onSetFocus();\r\n    }\r\n  };\r\n\r\n  const onChange = (\r\n    event: React.FormEvent<HTMLDivElement>,\r\n    item?: IDropdownOption,\r\n    index?: number\r\n  ): void => {\r\n    if (item) {\r\n      setSubCategory(\r\n        item.selected\r\n          ? [...subCategory, item.key as string]\r\n          : subCategory.filter((key) => key !== item.key)\r\n      );\r\n    }\r\n  };\r\n\r\n  const onTypeChange = (\r\n    ev?: React.FormEvent<HTMLElement | HTMLInputElement> | undefined,\r\n    option?: IChoiceGroupOption | undefined\r\n  ): void => {\r\n    const currentKey = option?.key || \"both\";\r\n    setType(currentKey);\r\n  };\r\n\r\n  const selectAllIfNoneSelected = () => {\r\n    if (subCategory.length === 0 && category !== \"all\") {\r\n      setSubCategory(dropdownOptions.map((k) => k.key));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack tokens={{ childrenGap: 5 }}>\r\n      <ChoiceGroup\r\n        selectedKey={type}\r\n        options={typeOptions}\r\n        onChange={onTypeChange}\r\n        label=\"Show me\"\r\n      />\r\n\r\n      <ChoiceGroup\r\n        label=\"Pick one category\"\r\n        defaultSelectedKey={category}\r\n        options={categoryOptions}\r\n        onChange={onCategoryChange}\r\n      />\r\n\r\n      <Dropdown\r\n        placeholder=\"Select options\"\r\n        label=\"Select subCategory you are looking for\"\r\n        selectedKeys={subCategory}\r\n        componentRef={dropdownRef}\r\n        // eslint-disable-next-line react/jsx-no-bind\r\n        onChange={onChange}\r\n        multiSelect\r\n        required={category !== \"all\"}\r\n        disabled={category === \"all\"}\r\n        options={dropdownOptions}\r\n        styles={dropdownStyles}\r\n        onDismiss={selectAllIfNoneSelected}\r\n      />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst dropdownStyles: Partial<IDropdownStyles> = { dropdown: { width: 300 } };\r\n\r\nconst categoryOptions: IChoiceGroupOption[] = [\r\n  {\r\n    key: \"all\",\r\n    text: \"All\",\r\n    iconProps: {\r\n      iconName: \"CheckList\",\r\n      style: { color: \"gray\" },\r\n    },\r\n  },\r\n  {\r\n    key: \"medicine\",\r\n    text: categoryMapping.medicine.text,\r\n    iconProps: {\r\n      iconName: categoryMapping.medicine.logoIcon,\r\n      style: { color: categoryMapping.medicine.color },\r\n    },\r\n  },\r\n  {\r\n    key: \"bloodgroup\",\r\n    text: categoryMapping.bloodgroup.text,\r\n    iconProps: {\r\n      iconName: categoryMapping.bloodgroup.logoIcon,\r\n      style: { color: categoryMapping.bloodgroup.color },\r\n    },\r\n  },\r\n  {\r\n    key: \"therapy\",\r\n    text: categoryMapping.therapy.text,\r\n    iconProps: {\r\n      iconName: categoryMapping.therapy.logoIcon,\r\n      style: { color: categoryMapping.therapy.color },\r\n    },\r\n  },\r\n  {\r\n    key: \"vaccine\",\r\n    text: categoryMapping.vaccine.text,\r\n    iconProps: {\r\n      iconName: categoryMapping.vaccine.logoIcon,\r\n      style: { color: categoryMapping.vaccine.color },\r\n    },\r\n  },\r\n  {\r\n    key: \"oxygen\",\r\n    text: categoryMapping.oxygen.text,\r\n    iconProps: {\r\n      iconName: categoryMapping.oxygen.logoIcon,\r\n      style: { color: categoryMapping.oxygen.color },\r\n    },\r\n  },\r\n  {\r\n    key: \"bed\",\r\n    text: categoryMapping.bed.text,\r\n    iconProps: {\r\n      iconName: categoryMapping.bed.logoIcon,\r\n      style: { color: categoryMapping.bed.color },\r\n    },\r\n  },\r\n  {\r\n    key: \"ambulance\",\r\n    text: categoryMapping.ambulance.text,\r\n    iconProps: {\r\n      iconName: categoryMapping.ambulance.logoIcon,\r\n      style: { color: categoryMapping.ambulance.color },\r\n    },\r\n  },\r\n  {\r\n    key: \"food\",\r\n    text: categoryMapping.food.text,\r\n    iconProps: {\r\n      iconName: categoryMapping.food.logoIcon,\r\n      style: { color: categoryMapping.food.color },\r\n    },\r\n  },\r\n];\r\n\r\nconst typeOptions: IChoiceGroupOption[] = [\r\n  { key: \"both\", text: \"Both\" },\r\n  { key: \"availability\", text: \"Availability\" },\r\n  { key: \"requirement\", text: \"Requirement\" },\r\n];\r\n\r\nfunction getOptionsForCategory(category: string) {\r\n  if (category === \"medicine\") {\r\n    return getEnumValues(Medicince);\r\n  } else if (category === \"therapy\") {\r\n    return getEnumValues(Therapy);\r\n  } else if (category === \"oxygen\") {\r\n    return getEnumValues(Oxygen);\r\n  } else if (category === \"bed\") {\r\n    return getEnumValues(Bed);\r\n  } else if (category === \"bloodgroup\") {\r\n    return getEnumValues(BloodGroup);\r\n  } else if (category === \"ambulance\") {\r\n    return getEnumValues(Ambulance);\r\n  } else if (category === \"food\") {\r\n    return getEnumValues(Food);\r\n  } else if (category === \"vaccine\") {\r\n    return getEnumValues(Vaccine);\r\n  } else {\r\n    return [];\r\n  }\r\n}\r\n","import { Icon, Label, Persona, PersonaSize } from \"@fluentui/react\";\r\nimport { ILead, IListingContact } from \"./Models\";\r\nimport { Image } from \"@fluentui/react/lib/Image\";\r\nimport { CATEGORIES, categoryMapping, CategoryType } from \"./Utils\";\r\n\r\nexport function DetailsPane(props: { contact: IListingContact }) {\r\n  return (\r\n    <div style={{ width: \"auto\", position: \"fixed\", left: 520 }}>\r\n      <Persona\r\n        showUnknownPersonaCoin={true}\r\n        text={props.contact.contactuid}\r\n        secondaryText={props.contact.type.toUpperCase()}\r\n        tertiaryText=\"Unverified contact\"\r\n        size={PersonaSize.size72}\r\n      />\r\n      <hr />\r\n      <div style={{ display: \"flex\" }}>\r\n        {CATEGORIES.map((cat) => (\r\n          <ListCard category={cat} contact={props.contact} />\r\n        ))}\r\n      </div>\r\n      <hr />\r\n      <Label title={\"Resources:\"} />\r\n      {props.contact.leads?.map((lead: ILead) => (\r\n        <Lead lead={lead} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ListCard(props: { category: CategoryType; contact: any }) {\r\n  const { category, contact } = props;\r\n\r\n  return contact[category].length > 0 ? (\r\n    <div style={{ width: 200, padding: 10 }}>\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <Icon\r\n          iconName={categoryMapping[category].logoIcon}\r\n          style={{ fontSize: 25, color: categoryMapping[category].color }}\r\n        />\r\n        <h3 style={{ display: \"inline-block\", margin: \"0 5px\" }}>\r\n          {categoryMapping[category].text}\r\n        </h3>\r\n      </div>\r\n      <ul style={{ paddingLeft: 25 }}>\r\n        {contact?.[category]?.map((item: string) => (\r\n          <li>{item}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nfunction Lead(props: { lead: ILead }) {\r\n  return (\r\n    <>\r\n      <Label title={`Shared by: ${props.lead.sender}`} />\r\n      <pre style={{ margin: 10 }}>{JSON.stringify(props.lead, null, 4)}</pre>\r\n      {props.lead.link && props.lead.source === \"whatsapp\" ? (\r\n        <Image src={`${props.lead.link}`} />\r\n      ) : (\r\n        JSON.parse(props.lead.rawdata || \"{}\").message\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import {\n  DefaultButton,\n  initializeIcons,\n  IStackTokens,\n  Panel,\n  PanelType,\n  Stack,\n  Link as FluentLink,\n  FocusZoneDirection,\n  FocusZone,\n  setFocusVisibility,\n} from \"@fluentui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  RouteComponentProps,\n  Link,\n  withRouter,\n} from \"react-router-dom\";\nimport { ResourceCardCompact } from \"./CompactResouceCard\";\nimport { IListingContact } from \"./Models\";\nimport { useBoolean } from \"@fluentui/react-hooks\";\nimport { FilterControls } from \"./FilterControls\";\nimport { CATEGORIES } from \"./Utils\";\nimport { DetailsPane } from \"./DetailsPane\";\n\nconst stackTokens: IStackTokens = { childrenGap: 10 };\n\n// Initialize icons in case this example uses them\ninitializeIcons();\n\n// This site has 3 pages, all of which are rendered\n// dynamically in the browser (not server rendered).\n//\n// Although the page does not ever refresh, notice how\n// React Router keeps the URL up to date as you navigate\n// through the site. This preserves the browser history,\n// making sure things like the back button and bookmarks\n// work properly.\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/search\" component={Search}></Route>\n          <Route path=\"/details\">\n            <Details />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n// You can think of these components as \"pages\"\n// in your app.\n\nfunction Home() {\n  return (\n    <Stack\n      verticalAlign=\"center\"\n      verticalFill\n      styles={{\n        root: {\n          margin: \"0 20px\",\n        },\n      }}\n      tokens={stackTokens}\n    >\n      <p>\n        More options coming soon, reach out to +91-8882017983. Till then you can{\" \"}\n        <Link to=\"/search\">Search for Covid Resources</Link>\n      </p>\n    </Stack>\n  );\n}\n\nconst Search = withRouter((props: RouteComponentProps) => {\n  const [paramStr, setParamString] = React.useState(props.location.search);\n  const params = new URLSearchParams(paramStr);\n\n  const cat = getCurrentCategory(params);\n  const [category, setCategory] = React.useState(cat.category);\n  const [type, setType] = React.useState(getCurrentType(params));\n  const [subCategory, setSubCategory] = React.useState<string[]>(cat.options);\n\n  const [resources, setResources] = useState<IListingContact[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const onHistoryChange = (location: {\n    search: React.SetStateAction<string>;\n  }) => {\n    setParamString(location.search);\n  };\n\n  useEffect(() => {\n    const removeListener = props.history.listen(onHistoryChange);\n    const newParams = new URLSearchParams(paramStr);\n    const searchUrl = formSearchUrl(newParams);\n\n    fetch(searchUrl, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        setResources(response.rows);\n        setIsLoading(false);\n      })\n      .catch((error) => console.log(error));\n\n    return () => {\n      removeListener();\n    };\n  }, [paramStr, props.history]);\n\n  const [isOpen, { setTrue: openFiltersPanel, setFalse: dismissPanel }] =\n    useBoolean(false);\n\n  const setFilterCategory = (newCategory: string) => {\n    if (newCategory === category) {\n      return;\n    }\n    if (newCategory === \"all\") {\n      CATEGORIES.forEach((cat) => {\n        params.delete(cat);\n      });\n      updateParams(params.toString());\n    }\n    setCategory(newCategory);\n  };\n\n  const setFilterType = (newType: string) => {\n    if (type === newType) {\n      return;\n    }\n    params.delete(\"type\");\n    if (newType === \"availability\" || newType === \"requirement\") {\n      params.append(\"type\", newType);\n    }\n    updateParams(params.toString());\n    setType(newType);\n  };\n\n  const setFilterSubcategory = (options: string[]) => {\n    params.delete(category);\n    options.forEach((opt) => params.append(category, opt));\n    updateParams(params.toString());\n    setSubCategory(options);\n  };\n\n  const updateParams = (newParamStr: string) => {\n    props.history.push(`/search?${newParamStr}`);\n    setParamString(newParamStr);\n  };\n  setFocusVisibility(true);\n  const [selectedIdx, setSelectedIdx] = useState(0);\n  return (\n    <Stack\n      verticalAlign=\"center\"\n      verticalFill\n      styles={{\n        root: {\n          margin: \"0 20px\",\n        },\n      }}\n      tokens={stackTokens}\n    >\n      <h2>Search</h2>\n      <DefaultButton\n        text=\"Open filters\"\n        onClick={openFiltersPanel}\n        style={{ marginBottom: 10, maxWidth: 482 }}\n      />\n      <div>\n        <Panel\n          headerText=\"Filters\"\n          isOpen={isOpen}\n          onDismiss={dismissPanel}\n          isLightDismiss\n          type={PanelType.medium}\n          // You MUST provide this prop! Otherwise screen readers will just say \"button\" with no label.\n          closeButtonAriaLabel=\"Close\"\n        >\n          <FilterControls\n            category={category}\n            subCategory={subCategory}\n            type={type}\n            setCategory={setFilterCategory}\n            setSubCategory={setFilterSubcategory}\n            setType={setFilterType}\n          />\n        </Panel>\n      </div>\n      {isLoading ? (\n        <></>\n      ) : (\n        <FocusZone\n          direction={FocusZoneDirection.vertical}\n          isCircularNavigation={true}\n          role=\"grid\"\n          defaultTabbableElement={\"div.ms-DocumentCard:first-child\"}\n          shouldFocusOnMount={true}\n          style={{ display: \"flex\", flexDirection: \"row\" }}\n          onFocus={(ev) => {\n            if (resources && resources.length > 0) {\n              const clickResourceNode = ev.target.closest(\".ms-DocumentCard\");\n              var nodes = Array.prototype.slice.call(\n                clickResourceNode?.parentNode?.childNodes\n              );\n              setSelectedIdx(nodes.indexOf(clickResourceNode));\n            }\n          }}\n        >\n          <Stack\n            tokens={stackTokens}\n            wrap={true}\n            styles={{ inner: { width: 500 } }}\n          >\n            {resources && resources.length ? (\n              resources.map((r) => (\n                <ResourceCardCompact resource={r} key={r.contactuid} />\n              ))\n            ) : (\n              <p>\n                {\"No results to show yet, \"}\n                <FluentLink onClick={openFiltersPanel}>\n                  {\"try using different filters.\"}\n                </FluentLink>\n                <br />\n                {\"Meanwhile, we will work on getting more leads!\"}\"\n              </p>\n            )}\n          </Stack>\n          {resources && resources.length > 0 && (\n            <DetailsPane contact={resources[selectedIdx]} />\n          )}\n        </FocusZone>\n      )}\n    </Stack>\n  );\n});\n\nfunction Details() {\n  return (\n    <div>\n      <h2>Details</h2>\n    </div>\n  );\n}\n\nfunction formSearchUrl(params: URLSearchParams): string {\n  return `https://covidresourcesapi.azurewebsites.net/contacts?${params.toString()}`;\n}\n\nfunction getCurrentType(params: URLSearchParams): string {\n  const types = params.getAll(\"type\");\n  if (!types || types.length === 0 || types.length === 2) {\n    return \"both\";\n  } else {\n    return types[0];\n  }\n}\n\nfunction getCurrentCategory(params: URLSearchParams): {\n  category: string;\n  options: string[];\n} {\n  for (const cat of CATEGORIES) {\n    let paramValues = params.getAll(cat) || [];\n    if (paramValues.length > 0) {\n      return { category: cat, options: paramValues };\n    }\n  }\n  return { category: \"all\", options: [] };\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}